
******
either w/ jumper or power switch of some kind, allow for connection between
at least iso_5v and HV (to allow for switching mosfets to produce current ->
measure voltage -> test / determine switch state <-> fet bit mapping)
-perhaps also allow for HV to one of the shift register outputs?
-power switch would be nice... (it should get input from one of the unused shift
 register outputs, and perhaps also be jumper configurable in either direction)
 because then board could basically test itself

-what else could be automatically tested? transistor to bypass instrumentation
 amplifier?
 -worth it?
 couldn't really electrically select bypass of isoamp... relay?
 probably too likely to lead to someone breaking isolation

-automatic test of FET <-> demux states mapping should also report possibly
 broken FETs

-might want to move enable bit to end of s.r., or 7th bit, to allow for same
 firmware for boards with 6 bits of channels (would make converting to
 demux_states (as-is, 5 bits) more tricky though...)

-bring reset button up on to shield (optional population)
******

decide whether to keep shield sch / footprint lib above, and then make sure
versions in project dir are current if deleting old masters

resolve conflicts between "rescue" (kicad dev v4->v5) derived project specific
schematic libraries with same-level schematic library i had made before
-PARTS SHOULD ONLY BE IN ONE OR THE OTHER, SAME-LEVEL IF SHARED...

make silkscreen prettier on shield board
	-(better) orientation information for FETs and diodes
	-less overlap / more consistency in orientation
	-larger github reference
	-isolation barrier depiction
	-warnings / descriptions of test points / bypass

don't have zone on B.Cu overlap with any metal parts on arduino
	-other ways to improve isolation?
tell people to assemble circuit board shortest components to tallest
	-maybe with some exceptions?
		-any stuff you can bend long pins on?
	-so that those components can be flush on the surface during assembly

reverse voltage protection on hv power supply

maybe get all DIP sockets as the kind that have pins bent in alternating
directions, for easier soldering?

bigger holes for connector to power supply! if i don't find a better connector
or integrate the high voltage supply

some kind of autogenerated instruction at least grouping components by type?
(kicad seems to support some instances of this, just pick one easy to automate?)


add LEDs to indicate:
-which fly is getting shocked (easiest, should be fine to split SR output)
-which fly is getting measured (easy: just show representation used, hard:
 convert to above) though the hard would be more quickly interpretable, other
 would require lookup table. could silkscreen table on to board?

-pull them out to the edge, or just put on the main face of the board somewhere?
-good parts for edge LED arrays?

-good interface for testing?
-what all do i want to test?
	-just put reference I (through) / R / V (across) each channel?
	-ovp?
	-reverse voltage protection (non-existant now)?

-detect whether mosfets are installed correctly?
	-why did i want to do this again? hoping to get rid of zeners?

-auto fill git repo information into version field on pcb during plotting

-make one version of shield board that is all surface mount?
	-would be interested in cost difference
-change diodes to through hole on existing through hole board

-space 10uF caps further from ICs (just a little)

-put in headers last
-slightly more space for measurement / maybe dissiation resistor (lengthwise)
-indicate zener direction

-account for all current. maybe shut down and indicate if over current
 (could use oscillator enable pin on DCP020507)
-maybe sense lt1118 temperature and do the same? i assume it is most likely to
overheat?

-include jumper for bridging iso-gnd with gnd, for testing? warn?
 maybe a single female pin for iso-gnd

-include (optional?) power jack (with / in-place of DCP020507 or equiv,
 depending on whether we can get isolation guarantee or not w/ external) +
 config switch
-even if not to avoid going over USB current limits (which it seems we would)
 , maybe disable 5-to-7 volt converter if arduino is just on USB power for
 easier programming (without risking overcurrent / brownout / etc. during
 programming)?
 -typical implementation?
-switch setting to disconnect power during programming?

-do i want to protect against ICs coming loose in sockets w/ extra
 pull-up/downs?

-TODO label which isolators control what, label s.r.s the same
and say which # chambers s.r.s control / which other pins, and label those too

-male(?) pins to isognd/5v for easier testing of subcircuits on a breadboard
